                                                                    PandasAssignment
                                                                    
Q1. How do you load a CSV file into a Pandas DataFrame?

Ans. 
import pandas as pd
df = pd.read_csv('file link')     

Q2. How do you check the data type of a column in a Pandas DataFrame?

Ans. df.dtypes

Q3. How do you select rows from a Pandas DataFrame based on a condition?

Ans. df.loc[condition]

Q4. How do you rename columns in a Pandas DataFrame?

Ans. df.rename()

Q5. How do you drop columns in a Pandas DataFrame?

Ans. df.drop('column name', axis=1, inplace=true)

Q6. How do you find the unique values in a column of a Pandas DataFrame?

Ans. df['column name'].unique()

Q7. How do you find the number of missing values in each column of a Pandas DataFrame?

Ans. df.isnull().sum()

Q8. How do you fill missing values in a Pandas DataFrame with a specific value?

Ans. import pandas as pd

df = pd.read_csv('data.csv')

newdf = df.fillna(222222)

Q9. How do you concatenate two Pandas DataFrames?

Ans. df_concat = [df1, df2]
     result = pd.concat(df_concat)

Q10. How do you merge two Pandas DataFrames on a specific column?

Ans. df1.merge(df2[['column1', 'column2', 'column3']])

Q11. How do you group data in a Pandas DataFrame by a specific column and apply an aggregation function?

Q12. How do you pivot a Pandas DataFrame?

Ans. df.pivot(index='  ', cloumn='    ', values='    ')

Q13. How do you change the data type of a column in a Pandas DataFrame?

Ans. 
# importing pandas as pd
import pandas as pd
 
# sample dataframe
df = pd.DataFrame({
    'A': [1, 2, 3, 4, 5],
    'B': ['a', 'b', 'c', 'd', 'e'],
    'C': [1.1, '1.0', '1.3', 2, 5]})
 
# converting all columns to string type
df = df.astype(str)
print(df.dtypes)

Q14. How do you sort a Pandas DataFrame by a specific column?

Ans. df.sort_values('column name')

Q15. How do you create a copy of a Pandas DataFrame?

Ans. 
import pandas as pd

data = {
  "name": ["Sally", "Mary", "John"],
  "qualified": [True, False, False]
}

df = pd.DataFrame(data)

#Make a copy:

newdf = df.copy()

print(newdf)

Q16. How do you filter rows of a Pandas DataFrame by multiple conditions?

Q17. How do you calculate the mean of a column in a Pandas DataFrame?

Q18. How do you calculate the standard deviation of a column in a Pandas DataFrame?

Q19. How do you calculate the correlation between two columns in a Pandas DataFrame?

Q20. How do you select specific columns in a DataFrame using their labels?

Ans. df.loc['colmn name']

Q21. How do you select specific rows in a DataFrame using their indexes?

Ans. df.iloc['colmn name']

Q22. How do you sort a DataFrame by a specific column?

Ans. df.sort_values('column name')

Q23. How do you create a new column in a DataFrame based on the values of another column?

Q24. How do you remove duplicates from a DataFrame?

Ans. 
import pandas as pd

data = {
  "name": ["Sally", "Mary", "John", "Mary"],
  "age": [50, 40, 30, 40],
  "qualified": [True, False, False, False]
}

df = pd.DataFrame(data)

newdf = df.drop_duplicates()

print(newdf)

Q25. What is the difference between .loc and .iloc in Pandas?

Ans. The main difference between pandas loc[] vs iloc[] is loc[] gets DataFrame rows & columns by labels/names and iloc[] gets by integer Index/position.
